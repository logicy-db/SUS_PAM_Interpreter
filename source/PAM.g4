grammar PAM;
progr     :  series NEWLINE;
series    :  stmt (';' stmt)*;
stmt      :  input_stmt | output_stmt | assign_stmt | cond_stmt | loop;
input_stmt :  'read' varlist;
output_stmt    :  'write' varlist;
assign_stmt    :  VARNAME ':=' (logical_expr|expr);
cond_stmt  :  'if' (logical_expr) 'then' series ('else' series)?  'fi';
loop      :  'while' (logical_expr) 'do' series 'end';
compar    :  expr RELATION expr;
varlist       :  VARNAME (',' VARNAME)*;
expr      :  term (WEAKOP term)*;
term      :  elem (STRONGOP elem)*;
elem      :  NUMBER | VARNAME | '(' expr ')';
logical_expr :  logical_term (WEAKBOOL logical_term)*;
logical_term : logical_elem (STRONGBOOL logical_elem)*;
logical_elem : (NEG)*? (compar|BOOL|VARNAME|'(' logical_expr ')');
STRONGBOOL : 'AND';
WEAKBOOL : 'OR';
NEWLINE    :  '\r' ? '\n';
WEAKOP    :  '+' | '-';
STRONGOP   :  '*' | '/';
RELATION   :  '<>' | '=<' | '>='| '=' |  '<' | '>'  ;
NUMBER    :  [0-9][0-9]* ;
NEG : 'NOT';
BOOL : 'True' | 'False';
VARNAME    :  ([a-z]|[A-Z]|'_') ([a-z]|[A-Z]|[0-9]|'_')*;
WS            :          [ \t\r\n]+ -> skip;